x <- c(1,2,3,4,"pi")
x
mode(x)
x-<- c(1:10)
x<- c(1:10)
x
length(x)
y <- 10
length(y)
x + y
x <- c(1:10)
y <- c(0,1)
y
x + y
y <- c(1,3,5)
x + y
y <- c(1,3,5)
x + y
2 + 3 * x
(2 + 3) * x
sqrt(x)
x %% 4
y <- 3 + 2i
Re(y)
Im(y) # 복소수의 허수부
x * y
y <- seq(10)
z <- rep(1,10)
x
y
z
x <- c(x,11:15)
x <- c(x,11:15)
x
p <- c(0.301,0.176,0.125,0.097,0.079,0.067,0.058,0.051,0.046)
p
v <- c(1:9)
v
sum(v * p)
Dev <- (v - mean(v))^2
Dev
sum(Dev * p)
stdev <- sqrt(sum(Dev * p))
stdev
x <- c(1:10)
x <- matrix(x,2,5)
x
matrix(0,5,2)
matrix(NA,2,5)
length(x)
mode(x)
typeof(x)
class(x)
dim(x)
y <- c(1:10)
length(y)
mode(y)
typeof(y)
class(y)
attributes(y)
colnames(x) <- c("A","B","C","D","E")
x
x[1,"C"]
x[1,2]
x[,1]
x[1,]
x[2,"E"]
9, 5, 13.2)
acctdata <- c(1, 132, 86.7,
2, 50, 50.7,
3, 32, 36.0,
4, 20, 27.9,
5, 19, 22.8,
6, 11, 19.3,
7, 10, 16.7,
8, 9, 14.7,
9, 5, 13.2)
acctdata
acctdata <- matrix(acctdata,9,3,byrow=TRUE)
colnames(acctdata) <- c("digit","actual","expected")
acctdata
chisquare <- sum((acctdata[,2]-acctdata[,3])^2/acctdata[,3])
chisquare
A <- matrix(c(4, 0, 5,
0, 1, -6,
3, 0, 4), 3, 3, byrow =TRUE)
B <- solve(A)
B
A
A %*% B
B %*% A
A * B
B * A
A
A[,1]
A[1,]
A[1,,drop=FALSE]
A
typeof(A[,1])
mode(A[,1])
typeof(A[,1])
class(A[,1])
mode(A[,1])
typeof(A[,1])
address <- list("Larry Pace","102 San Mateo Dr.","Anderson","SC",29625)
address
rm(list=ls())
scores <- c(17,19,24,25,16,15,23,24,29,17)
people <- c("Kim","Bob","Ted","Sue","Liz","Amanda","Tricia","Johnathan","Luis","Isabel")
scores <- c(17,19,24,25,16,15,23,24,29,17)
people
scores
quiz_scores <- data.frame(people,scores)
quiz_scores
quiz_scores[2]
quiz_scores[,2]
quiz_scores$scores
attach(quiz_scores)
scores
percapita
percapita
rm(list=ls())
s <- 2
t <- 1
a <- s^2 - t^2
b <- 2*s*t
c <- s^2 + t^2
a
b
c
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
}
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
}
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
#Generate Pythagorean triples
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
}
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
}
pythag <- function(x){
s <- x[1] #pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
}
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
}
rm(list=ls())
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
}
s <- 2
t <- 1
a <- s^2 - t^2
b <- 2*s*t
c <- s^2 + t^2
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
}
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
}}
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
}
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
pythag(c(2,3))
input <- scan()
pythag(input)
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
pythag(input)
pythag <- function(x){
s <- x[1]pythag(1,2)
t <- x[2]
a <- t^2 - s^2
b <- 2 * s * t
c <- s^2 + t^2
cat("The Pythagorean triple is: ",a,b,c,"\n")
}
quadratic <- function(coeff){
a <- coeff[1]
b <- coeff[2]
c <- coeff[3]
d <- b^2 - (4*a*c)
cat("The discriminant is: ", d, "\n")
if(d < 0) cat("There are no real roots. ", "\n")
if(d >= 0){
root1 <- (-b+sqrt(d))/(2*a)
root2 <- (-b-sqrt(d))/(2*a)
cat("root1: ",root1,"\n")
cat("root2: ",root2,"\n")
}
}
quadratic(c(2,-1,-8))
info <- list(name = "Ray", gender = "Male", age = 52, salary = 38500)
class(info)
class(info) <- "member"
names()
$names
info <- list(name = "Ray", gender = "Male", age = 52, salary = 38500)
class(info) <- "member"
attributes(info)
rm(list=ls())
info <- list(name = "Ray", gender = "Male", age = 52, salary = 38500)
class(info) <- "member"
attributes(info)
info
print.member <- function(person){
cat(person$name, "\n")
cat("gender",person$sex, "\n")
cat("age",person$age, "\n")
cat("salary",person$salary, "\n")
}
info
print.member <- function(person){
cat(person$name, "\n")
cat("gender",person$gender, "\n")
cat("age",person$age, "\n")
cat("salary",person$salary, "\n")
}
info
setClass("member",
representation (
name = "character" ,
sex = "character" ,
age = "numberic" ,
salary = "numberic"
)
)
setClass("member",
representation (
name = "character" ,
gender = "character" ,
age = "numberic" ,
salary = "numberic"
)
)
setClass("member",
representation (
name = "character" ,
gender = "character" ,
age = "numberic" ,
salary = "numberic"
)
)
info <- list(name = "Ray", gender = "Male", age = 52, salary = 38500)
class(info) <- "member"
attributes(info)
info
print.member <- function(person){
cat(person$name, "\n")
cat("gender",person$gender, "\n")
cat("age",person$age, "\n")
cat("salary",person$salary, "\n")
}
info
attributes(info)
info
rm(list=ls())
info <- list(name = "Ray", gender = "Male", age = 52, salary = 38500)
class(info) <- "member"
attributes(info)
info
print.member <- function(person){
cat(person$name, "\n")
cat("gender",person$gender, "\n")
cat("age",person$age, "\n")
cat("salary",person$salary, "\n")
}
info
setClass("member",
representation (
name = "character" ,
gender = "character" ,
age = "numberic" ,
salary = "numberic"
)
)
setClass("member",
representation (
name = "character" ,
gender = "character" ,
age = "numberic" ,
salary = "numberic"
)
)
setClass("member",
representation (
name = "character" ,
gender = "character" ,
age = "numberic" ,
salary = "numberic"
)
)
rm(list=ls())
info <- list(name = "Ray", gender = "Male", age = 52, salary = 38500)
class(info) <- "member"
attributes(info)
setClass("member",
representation (
name = "character" ,
gender = "character" ,
age = "numberic" ,
salary = "numberic"
)
)
rm(list=ls())
info <- list(name = "Ray", gender = "Male", age = 52, salary = 38500)
class(info) <- "member"
attributes(info)
print.member <- function(person){
cat(person$name, "\n")
cat("gender",person$sex, "\n")
cat("age",person$age, "\n")
cat("salary",person$salary, "\n")
}
info
setClass("member",
representation (
name = "character" ,
sex = "character" ,
age = "numberic" ,
salary = "numberic"
)
)
setClass("member",
representation (
name = "character" ,
sex = "character" ,
age = "numeric" ,
salary = "numeric"
)
)
ray <- new("member",name="Ray", sex="Male", age=52, salary =38500)
ray
